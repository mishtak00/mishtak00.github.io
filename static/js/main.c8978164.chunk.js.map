{"version":3,"sources":["components/shared/Navbar.js","components/shared/NetAnimation.js","components/home/Header.js","components/home/index.js","components/about/AboutMe.js","components/shared/GlobeAnimation.js","components/projects/ImgMediaCard.js","components/projects/ProjectGrid.js","components/projects/Projects.js","components/shared/WavesAnimation.js","components/contact/ContactHeader.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js","images/gm-icon.png","images/bitmoji.jpeg","images/berlin.jpeg","images/profile.jpeg","images/beach.jpeg","images/projects/this.png","images/projects/contactchain.png","images/projects/centerfinder.png","images/projects/correlator.png","images/projects/malloc.png","images/projects/qparser.png","images/projects/wun.png","images/projects/genome1.png","images/projects/metrics.png","images/projects/map1.png","images/projects/dimensions.png","images/projects/qsim0.png","images/professional.jpeg"],"names":["useStyles","makeStyles","navbarIconStyle","flex","Navbar","pos","classes","Box","component","AppBar","position","color","Toolbar","className","IconButton","Link","to","Avatar","src","GMIcon","alt","Button","Typography","NetAnimation","vantaRef","React","createRef","this","vantaEffect","NET","THREE","el","current","mouseControls","touchControls","minHeight","minWidth","scale","scaleMobile","backgroundColor","points","maxDistance","spacing","destroy","ref","style","width","height","Component","theme","avatar","margin","subtitle","centerBox","top","textAlign","zIndex","Header","Grid","container","justify","Bitmoji","variant","strings","typeSpeed","showCursor","backSpeed","loop","Home","background","paper","padding","paddingBottom","marginTop","gridItem","p","marginBottom","AboutMe","Container","item","Profile","xs","zeroMinWidth","Paper","md","Berlin","Beach","GlobeAnimation","GLOBE","color2","size","root","maxWidth","ImgMediaCard","projectProps","content","Card","CardActionArea","CardMedia","title","image","img","CardContent","gutterBottom","desc","hasSrc","CardActions","href","target","hasOther","otherSrc","otherName","bottomLinks","projects","This","ContactChain","CenterFinder","Correlator","QSim","Malloc","QParser","WUN","Map","Genome","Dimensions","Metrics","gridItemStyles","gridItemBottom","projectGrid","projectGridHeaderBox","projectGridHeader","ProjectGrid","gridCols","bottomStartIndex","length","forEach","project","i","push","key","align","map","column","textBox","Projects","WavesAnimation","WAVES","Professional","fontSize","ContactHeader","App","CssBaseline","exact","path","Contact","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c8978164.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { \n    AppBar, \n    Toolbar,\n    IconButton,\n    Avatar,\n    Typography,\n    Box,\n\tButton,\n\tmakeStyles\n} from '@material-ui/core'\nimport GMIcon from '../../images/gm-icon.png'\n\n\n\nconst useStyles = makeStyles(() => ({\n\tnavbarIconStyle: {\n\t\tflex: 1\n\t}\n}));\n\nconst Navbar = ((pos) => {\n\tconst classes = useStyles();\n    return (\n\t\t<Box component='nav'>\n\t\t\t<AppBar position={pos.pos} color='transparent'>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Box className={classes.navbarIconStyle}>\n\t\t\t\t\t\t<IconButton component={Link} to={'/'}>\n\t\t\t\t\t\t\t<Avatar src={GMIcon} alt='Gebri Mishtaku' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Button component={Link} to={'/about-me'}>\n\t\t\t\t\t\t\t<Typography>About</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button component={Link} to={'/projects'}>\n\t\t\t\t\t\t\t<Typography>Projects</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button component={Link} to={'/contact'}>\n\t\t\t\t\t\t\t<Typography>Contact</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n    );\n});\n\n\nexport default Navbar;\n","import React from 'react';\nimport * as THREE from 'three';\nimport NET from 'vanta/dist/vanta.net.min';\nimport { Box } from '@material-ui/core';\n\n\n\nexport default class NetAnimation extends React.Component {\n  constructor() {\n    super();\n    this.vantaRef = React.createRef();\n  }\n  componentDidMount() {\n    this.vantaEffect = NET({\n      THREE: THREE,\n      el: this.vantaRef.current,\n      mouseControls: true,\n      touchControls: true,\n      minHeight: 200.00,\n      minWidth: 200.00,\n      scale: 1.00,\n      scaleMobile: 0.50,\n      color: 0x0,\n      backgroundColor: 0xffffff,\n      points: 15.0,\n      maxDistance: 23.00,\n      spacing: 20.0\n    })\n  }\n  componentWillUnmount() {\n    if (this.vantaEffect) this.vantaEffect.destroy();\n  }\n  render() {\n    return (\n      <Box \n      ref={this.vantaRef} \n      style={{\n        position: 'absolute',\n        width: '100vw',\n        height: '100vh',\n        }}>\n      </Box>\n    );\n  }\n}\n\n\n\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Avatar, Grid, Box } from '@material-ui/core'\nimport Bitmoji from '../../images/bitmoji.jpeg'\nimport Typed from 'react-typed'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n        margin: theme.spacing(1)\n    },\n    subtitle: {\n        color: '#660000'\n    },\n    centerBox: {\n        position: 'absolute',\n        top: '30%',\n        width: '100vw',\n        textAlign: 'center',\n        zIndex: 1\n    }\n}))\n\nconst Header = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.centerBox}>\n            <Grid container justify='center'>\n                <Avatar className={classes.avatar} src={Bitmoji} alt='Gebri Mishtaku' />\n            </Grid>\n            <Typography variant='h2'>\n                <Typed strings={[\"Hi, I'm Gebri!\"]} typeSpeed={25} showCursor={false}/>\n            </Typography>\n            <Typography className={classes.subtitle} variant='h5'>\n                <Typed \n                // showCursor={false}\n                // startDelay={2650}\n                strings={[\n                    \"I'm a Software Engineer\",\n                    \"I'm a Full Stack Developer\",\n                    \"I'm a Quantum Programmer\"\n                ]} \n                typeSpeed={25}\n                backSpeed={20}\n                loop\n                // shuffle\n                />\n            </Typography>\n        </Box>\n    );\n}\n\nexport default Header;\n\n","import React from 'react'\nimport Navbar from '../shared/Navbar'\nimport NetAnimation from '../shared/NetAnimation'\nimport Header from './Header'\n\n\n\nconst Home = () => {\n    return (\n        <>\n            <Navbar pos='absolute' />\n            <NetAnimation />\n            <Header />\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Container, Grid, Avatar, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from '../shared/Navbar';\nimport Berlin from '../../images/berlin.jpeg'\nimport Profile from '../../images/profile.jpeg'\nimport Beach from '../../images/beach.jpeg'\nimport NetAnimation from '../shared/NetAnimation'\n\n\n\nlet elevatorPitch = \n`\nMy name is Gebri Mishtaku and I am a software engineer and entrepreneur with great interest in new quantum \ntechnologies and networking. I graduated from the University of Rochester in Rochester, NY, where I studied \nComputer Science, Physics, Math and Entrepreneurship. Now I work in Internet Technologies at Apple!\nI am a great problem solver because my technical background allows me to navigate different complexity levels \ncomfortably and with intellectual ease, but that’s not all I bring to the table. My biggest \nasset is the breadth of my worldly experience. My diverse history has given me the opportunity to grow up to \nbe more people-oriented than the average technical person. It is due to this that I believe that the hardest \npart of any problem is the human component.\n`;\nlet life1 = \n`\nI consider myself blessed to have been raised with all the intellectual freedom I could have ever asked for. \nOne of the earliest memories I have of myself thriving among this curious freedom is when I set the tablecloth \non fire as a toddler. The physical transformation that I thought would happen was so exiting to me, so \nI lit it up! My mom brushed it off with a smile as if I had been pushed by childish whim to do it, but no, no, \nI'm substantially older now and she knows I'm the most curious I've ever been.\n`;\nlet life2 = \n`\nLuckily for us, that incident concluded my adventures as a delinquent kid just on time for the introduction \nof my newest favorite toys: computers. Granted, at first I was just curious about which pipes in Mario were \nsecret passages, but as I grew up I started wondering how could it be that I controlled Mario to my volition \njust by pressing some buttons. How did this rugged Italian plumber even exist on the palm of my hands?\n`;\nlet life3 = \n`\nI must’ve been around 11 when I wrote my very first program – and in C++ of all languages, whewww. I remember \nit was a simple main with loops and control flow statements, which was my way of making a teletype game. The \nfirst and only user of that very boring app was my little brother. He was just so happy to read his name on \nthe screen when the results of his choices would print out, and I was just so happy within that moment. \nThrough the art of coding, I found awe.\n`;\nlet life4 =\n`\nDuring my late teens, I was lucky enough to be part of the Eastern Mediterranean International School in Israel. \nIn my time there, I furthered my appreciation for technology and its use on advancing the human race towards a \nbrighter and more peaceful future. My interests matured and diversified as I lived my years to the fullest with \npeople that were as crazy and committed to finding truth in how the world works as I am.\n`;\nlet life5 = \n`\nBy the age of 20, I had lived on 3 different continents and had made friends from 6 of them. \n`;\nlet free1 = \n`\nApart from hacking away at code, I love the thrill of learning and doing new things and taking calculated risks. \nSome of my hobbies are following financial markets and managing personal finance, reading fiction novels, \nsolving puzzles and brain teasers, reading math textbooks, playing videogames, hiking, and camping.\n`;\nlet free2 = \n`\nI also love to travel around, especially to places with beautiful beaches. If I’d have to choose an environment \nto spend the rest of my life in, it would definitely be a beach or somewhere very near it. Some of my favorite \nbooks of all time are The Alchemist, The Richest Man in Babylon, and the Hebrew Bible.\n`;\nlet free3 = \n`\nSome simple things in life that I really enjoy are hanging out with friends and family, working out, eating \nhealthy and trying out new food. Some big ideas that I like to ponder are space travel, our place in the universe, \nother intelligent life, theories of artificial intelligence, the future of humanity, and of course, politics. \n`;\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        background: '#c33764',  /* fallback for old browsers */\n        background: '-webkit-linear-gradient(to right, #c33764, #1d2671)',  /* Chrome 10-25, Safari 5.1-6 */\n        background: 'linear-gradient(to right, #c33764, #1d2671)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        // background: 'linear-gradient(to right, #c31432, #240b36)',\n        // background: 'linear-gradient(to right, #3A1C71, #D76D77, #FFAF7B)',\n        // background: 'linear-gradient(to right, #fcb045, #fd1d1d, #833ab4)',\n        width: '100vw'\n    },\n    container: {\n        position: 'relative',\n        top: '10vh'\n    },\n    paper: {\n        padding: theme.spacing(3),\n        paddingBottom: theme.spacing(1),\n        textAlign: 'left',\n    },\n    avatar: {\n\n        width: '30vh',\n        height: '30vh',\n        // height: theme.spacing(39),\n        // width: theme.spacing(39),\n        marginTop: theme.spacing(1)\n    },\n    gridItem: {\n        margin: 10\n    },\n    p: {\n        marginTop: 10,\n        marginBottom: 10\n    }\n}));\n\nexport default function AboutMe() {\n  const classes = useStyles();\n  return (\n      <div>\n\n        <div className={classes.background} style={{position: 'fixed', height: '35vh'}} />\n\n        <NetAnimation />\n\n        <Navbar pos='absolute' />\n\n        <Container className={classes.container}>\n            <Grid container spacing={3}>\n\n                <Grid container justify='center'>\n\n                    <Grid item className={classes.gridItem}>\n                        <Avatar src={Profile} alt='Gebri Mishtaku' className={classes.avatar} />\n                    </Grid>\n                    \n                    <Grid item xs={10} zeroMinWidth className={classes.gridItem}>\n                        <Paper className={classes.paper} >\n                            <Typography variant='h5'>\n                                Elevator pitch\n                            </Typography>\n                            <Typography className={classes.p}>\n                                {elevatorPitch}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n\n\n                    <Grid container justify='center'>\n\n                        <Grid item xs={10} md={8} zeroMinWidth className={classes.gridItem}>\n                            <Paper className={classes.paper}>\n                                <Typography variant='h5'>\n                                    My life growing up\n                                </Typography>\n                                <Typography className={classes.p}>{life1}</Typography>\n                                <Typography className={classes.p}>{life2}</Typography>\n                                <Typography className={classes.p}>{life3}</Typography>\n                                <Typography className={classes.p}>{life4}</Typography>\n                                <Typography className={classes.p}>{life5}</Typography>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item md={2}>\n                            <Avatar src={Berlin} alt='Gebri Mishtaku' className={classes.avatar} />\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Grid container justify='center'>\n\n                        <Grid item>\n                            <Avatar src={Beach} alt='Gebri Mishtaku' className={classes.avatar} />\n                        </Grid>\n\n                        <Grid item xs={10} md={8} zeroMinWidth className={classes.gridItem}>\n                            <Paper className={classes.paper}>\n                                <Typography variant='h5'>\n                                    In my free time\n                                </Typography>\n                                <Typography className={classes.p}>{free1}</Typography>\n                                <Typography className={classes.p}>{free2}</Typography>\n                                <Typography className={classes.p}>{free3}</Typography>\n                            </Paper>\n                        </Grid>\n\n                    </Grid>\n\n                </Grid>\n                \n            </Grid>\n        </Container>\n\n\n        <div className={classes.background} style={{position:'relative', top: '12.5vh', height: '7vh', }} />\n\n\n    </div>\n  );\n}\n\n\n\n\n","import React from 'react';\nimport * as THREE from 'three';\nimport GLOBE from 'vanta/dist/vanta.globe.min';\nimport { Box } from '@material-ui/core';\n\n\n\nexport default class GlobeAnimation extends React.Component {\n  constructor() {\n    super();\n    this.vantaRef = React.createRef();\n  }\n  componentDidMount() {\n    this.vantaEffect = GLOBE({\n        THREE: THREE,\n        el: this.vantaRef.current,\n        mouseControls: true,\n        touchControls: true,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        scale: 1.00,\n        scaleMobile: 1.00,\n        color: 0x0,\n        color2: 0xff0000,\n        backgroundColor: 0xffffff,\n        size: 0.5\n      })\n  }\n  componentWillUnmount() {\n    if (this.vantaEffect) this.vantaEffect.destroy();\n  }\n  render() {\n    return (\n      <Box \n      ref={this.vantaRef} \n      style={{\n        position: 'absolute',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 0.1\n        }}>\n      </Box>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles({\n  root: {\n\tmaxWidth: 340\n  },\n});\n\nconst bottomLinks = ((content) => {\n\treturn (\n\t\t\t(\n\t\t\t\tcontent.hasSrc===true \n\t\t\t\t?\n\t\t\t\t(\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button size=\"small\" color=\"primary\" href={content.src} target='_blank'>\n\t\t\t\t\t\tSource Code\n\t\t\t\t\t</Button>\n\t\t\t\t\t{content.hasOther===true \n\t\t\t\t\t? \t<Button size=\"small\" color=\"primary\" href={content.otherSrc} target='_blank'>\n\t\t\t\t\t\t\t{content.otherName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t: <></>}\n\t\t\t\t</CardActions>\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t\tcontent.hasOther===true\n\t\t\t\t?\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button size=\"small\" color=\"primary\" href={content.otherSrc} target='_blank'>\n\t\t\t\t\t\t{content.otherName}\n\t\t\t\t\t</Button>\n\t\t\t\t</CardActions>\n\t\t\t\t:\n\t\t\t\t<></>\n\t\t\t)\n\t);\n});\n\nexport default function ImgMediaCard(projectProps) {\n  const classes = useStyles();\n  const content = projectProps.content\n  return (\n\t<Card className={classes.root}>\n\n\t  <CardActionArea>\n\t\t\n\t\t<CardMedia\n\t\t\tcomponent=\"img\"\n\t\t\talt={content.title}\n\t\t\t// height=\"300\"\n\t\t\timage={content.img}\n\t\t\ttitle={content.title}\n\t\t/>\n\n\t\t<CardContent>\n\t\t  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t{content.title}\n\t\t  </Typography>\n\t\t  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t{content.desc}\n\t\t  </Typography>\n\t\t</CardContent>\n\n\t  </CardActionArea>\n\n\t  {bottomLinks(content)}\n\n\t</Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, IconButton } from '@material-ui/core';\nimport ImgMediaCard from './ImgMediaCard';\nimport This from '../../images/projects/this.png'\nimport ContactChain from '../../images/projects/contactchain.png'\nimport CenterFinder from '../../images/projects/centerfinder.png'\nimport Correlator from '../../images/projects/correlator.png'\n// import Checkers from '../../images/projects/checkers.png'\nimport Malloc from '../../images/projects/malloc.png'\nimport QParser from '../../images/projects/qparser.png'\nimport WUN from '../../images/projects/wun.png'\nimport Genome from '../../images/projects/genome1.png'\nimport Metrics from '../../images/projects/metrics.png'\nimport Map from '../../images/projects/map1.png'\nimport Dimensions from '../../images/projects/dimensions.png'\nimport QSim from '../../images/projects/qsim0.png'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\n\nlet projects = [\n    {\n        title: 'this.website',\n        desc: 'My personal portfolio website made entirely with React and Material-UI.',\n        img: This,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/mishtak00.github.io-src'\n    },\n    {\n        title: 'ContactChain',\n        desc: 'A blockchain-based solution to the contact tracing problem for infectious \\\n        diseases. Startup idea that I had during the COVID-19 pandemic. Reimagined \\\n        face-to-face contact as health transactions on a blockchain. Developed into an app \\\n        during my entrepreneurial fifth year of college.',\n        img: ContactChain\n    },\n    {\n        title: 'CenterFinder',\n        desc: 'Open-source Python package for astronomy research. Pushes state-of-\\\n        the-art in the detection of cosmic objects named BAO. Achieves better than O(N^5) \\\n        runtime as opposed to the usual O(N^n) for the computation of an isotropic \\\n        n-point correlation function over large galactic surveys.',\n        img: CenterFinder,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/centerfinder',\n        hasOther: true,\n        otherName: 'Publication',\n        otherSrc: 'https://arxiv.org/abs/2008.12793'\n    },\n    {\n        title: 'Efficient Two-Point Correlator',\n        desc: 'Open-source Python package for estimating the spatial \\\n        two-point correlation function (Landy-Szalay estimator). Implements \\\n        a high-performance, binary tree-based algorithm that correctly \\\n        estimates the 2pcf in faster than O(logN*logM) by convolutions over \\\n        large probability fields rather than point-by-point.',\n        img: Correlator,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/correlator'\n    },\n    // {\n    //     title: 'IntelliCheckers',\n    //     desc: 'Java implementation of a checkers game with an intelligent \\\n    //     adversary. The backend of the AI player implements minimax adversarial \\\n    //     search, alpha-beta pruning, and move-tree ordering and balancing to \\\n    //     successfully simulate and beat a human player in real-time.',\n    //     img: Checkers,\n    //     hasSrc: true,\n    //     src: 'https://github.com/mishtak00/IntelliCheckers'\n    // },\n    {\n        title: 'Quantum Computer Simulator',\n        desc: 'Python implementation of a simulator for gate-based quantum computation. \\\n        Can apply a range of built-in and user-customized quantum gates over circuits with \\\n        any number of qubits and produce results that correctly simulate a quantum system. \\\n        Backend implements fast tensor products over real and complex variable domains.\\\n        \\\n        Picture credits: IBM',\n        img: QSim,\n        hasSrc: false\n    },\n    {\n        title: 'Dynamic Memory Allocator',\n        desc: 'C implementation of a dynamic memory allocator with extremely low \\\n        spatial segmentation and operation latency. Matches C\\'s malloc package at \\\n        97% in overall space and time efficiency by implementing better than O(N) search \\\n        and strategic spatial coalescing.',\n        img: Malloc,\n        hasSrc: false\n    },\n    {\n        title: 'Quantum Programs Parser',\n        desc: 'Python implementation of a parser for quantum circuits in QASM-like \\\n        program style. The backend implements a recursive descent parser.',\n        img: QParser,\n        hasSrc: false\n    },\n    {\n        title: 'World Universities Social Network Analysis',\n        desc: 'Big data project that explored strengths and weaknesses of the \\\n        World Universities Network, comprised by the University of Rochester and \\\n        collaborating institutions. Served to inform on the optimization of \\\n        institutional resources to achieve highest reward per collaboration within \\\n        the network.',\n        img: WUN,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/wun',\n        hasOther: true,\n        otherName: 'Writeup',\n        otherSrc: 'https://docs.google.com/document/d/1DDfojLzMP0Ns8cQanmUSCWnnF1eJDvgWU4DsleGGjs8/edit'\n    },\n    {\n        title: 'Optimal Path Finder',\n        desc: 'Java implementation of a mini GPS application for New York State. \\\n        The backbone of the map is a graph in adjacency list representation, and \\\n        the backend implements Dijkstra\\'s algorithm with added heuristics to solve \\\n        the shortest path problem between 2 points in faster than O(E*logV) average \\\n        case. The application overlays the graph representation over the real map of NYS \\\n        and fits it well by applying a Mercator transformation. The real map is \\\n        retrieved from Google Maps Static API live during runtime.',\n        img: Map,\n    },\n    {\n        title: 'Genome project',\n        desc: 'Machine Learning project that implements dimensionality-reduction methods, \\\n        unsupervised learning (clustering), as well as NLP techniques in looking \\\n        for fine structure in genetics-related publications. Identified multiple \\\n        subfields that served to inform outside investor funding decisions.',\n        img: Genome,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/genome'\n    },\n    {\n        title: 'Scholarly Database API Wrapper',\n        desc: 'Data scraping, management and integration project that consolidated \\\n        faculty databases held at the institutional level with online scholarly \\\n        databases through automated cross-checking and merging in Python. The \\\n        core feature is dynamic data querying and retrieval through multifunctional \\\n        API wrappers for Dimensions, Elsevier and Clarivate products. \\\n        Picture credits: Dimensions.ai',\n        img: Dimensions,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/dimensions-scrape'\n    },    \n    {\n        title: 'Pretty-print metrics',\n        desc: 'Data wrangling project that transforms raw csv data into pdfs that are \\\n        nicer to look at.',\n        img: Metrics,\n        hasSrc: true,\n        src: 'https://github.com/mishtak00/fims'\n    },\n];\n\n\nconst gridItemStyles = makeStyles((theme) => ({\n    gridItem: {\n        maxWidth: 340,\n        marginBottom: theme.spacing(3)\n    },\n    gridItemBottom: {\n        maxWidth: 340,\n    },\n    // LOCKED DONT TOUCH\n    projectGrid: {\n        position: 'relative',\n        top: 300,\n        width: '100vw'\n    },\n    projectGridHeaderBox: {\n        background: '#ffffff', \n        width: '100vh', \n        // paddingTop: theme.spacing(3),\n        // paddingBottom: theme.spacing(3)\n    },\n    projectGridHeader: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n    }\n}));\n\n\nexport default function ProjectGrid() {\n    var gridCols = [[],[],[],[]];\n    const classes = gridItemStyles();\n\n    // this is to get correct margin of bottom element\n    // of grid items that are at the bottom of\n    // grid columns, a correction for mobile view\n    let projListLen = projects.length;\n    let colListLen = gridCols.length;\n    let bottomStartIndex = projListLen - colListLen;\n\n    projects.forEach((project, i) => {\n        gridCols[i % gridCols.length].push(\n            <Grid key={i} item xs={12} align='left'\n            className={i<bottomStartIndex ? classes.gridItem : classes.gridItemBottom}>\n                <ImgMediaCard content={project} />\n            </Grid>\n            );\n    });\n    \n    return (\n        <div>\n            <Grid container justify='center' spacing={3} className={classes.projectGrid}>\n\n                <Grid item xs={12} align='center' className={classes.projectGridHeaderBox}>\n                    <Grid item xs={12} md={10} align='left' className={classes.projectGridHeader}>\n                        \n                        <Grid container>\n                            <Grid item style={{marginTop: 8}}>\n                                <Typography variant='h5'>\n                                    For a list of some college-level courses I've taken,\n                                    please visit my LinkedIn profile at    \n                                </Typography>\n                            </Grid>\n                            <Grid item >\n                                <IconButton href='https://www.linkedin.com/in/gebrimishtaku/' target='_blank'>\n                                    <LinkedInIcon style={{color: '#0e76a8'}} />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container>\n                            <Grid item style={{marginTop: 8}}>\n                                <Typography variant='h5'>\n                                    You can also visit my GitHub page for all my open-source projects at\n                                </Typography>\n                            </Grid>\n                            <Grid item >\n                                <IconButton href='https://www.github.com/mishtak00/' target='_blank'>\n                                    <GitHubIcon style={{color: '#171515'}}/>\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container>\n                            <Grid item style={{marginTop: 8}}>\n                                <Typography variant='h5'>\n                                The following list features some personal projects and others from \n                                work and class that I find pretty cool :) \n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                </Grid>\n\n                <Grid container justify='center' spacing={3} style={{width: '100vw', marginTop: 50, maxWidth: 1450}}>\n                    {gridCols.map((column, i) => (\n                        <Grid key={i} item xs={12} md={3} align='center'> {column} </Grid>\n                    ))}\n                </Grid>\n                \n                \n\n            </Grid>\n        </div>\n    );\n};\n\n\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from '../shared/Navbar';\nimport GlobeAnimation from '../shared/GlobeAnimation'\nimport ProjectGrid from './ProjectGrid';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        background: '#c33764',  /* fallback for old browsers */\n        background: '-webkit-linear-gradient(to right, #c33764, #1d2671)',  /* Chrome 10-25, Safari 5.1-6 */\n        background: 'linear-gradient(to right, #c33764, #1d2671)', /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    },\n    // LOCKED DONT TOUCH\n    textBox: {\n        position: 'relative',\n        top: '20vh',\n        width: '100vw',\n        zIndex: 1\n    }\n}));\n\nexport default function Projects() {\n  const classes = useStyles();\n  const subFontSize = 'h6';\n\n  return (\n      <div>\n\n        <div className={classes.background} \n        style={{position: 'fixed', height: '35vh', width: '100vw'}} />\n\n        <Navbar pos='absolute' />\n\n        <GlobeAnimation />\n\n        <Grid container justify='center' className={classes.textBox}>\n\n            <Grid item xs={10}>\n                <Typography variant='h1'>\n                    Skills & Projects\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant='h4'>\n                    <br/>\n                    I'm ready to hit the ground running with\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant={subFontSize}>\n                    Classic stack: C | Python | Bash | Objective-C\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant={subFontSize}>\n                    Web stack: HTML | CSS | JavaScript | React | SQL | REST API\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant={subFontSize}>\n                    Quantum stack: Qiskit | QASM\n                </Typography>\n            </Grid>\n\n            \n            <Grid item xs={10}>\n                <Typography variant='h4'>\n                    <br/>\n                    Tech I’m familiar with and learning more about\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant={subFontSize}>\n                    AWS | Google Cloud | Docker | Flutter | AWS Braket\n                </Typography>\n            </Grid>\n\n            <Grid item xs={10}>\n                <Typography variant='h4'>\n                    <br/>\n                    Ancillary software engineering knowledge\n                </Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography variant={subFontSize} style={{maxWidth: 600}}>\n                    git version control | debugging tools | unit\n                    and system testing | Agile development | complete Software Development\n                    Life Cycle | Mac, Windows, Linux environments\n                </Typography>\n            </Grid>\n            \n            <ProjectGrid />\n\n        </Grid>\n\n        <div className={classes.background} \n        style={{position:'relative', top: 530, height: '7vh'}} />\n\n    </div>\n  );\n}\n\n","import React from 'react';\nimport * as THREE from 'three';\nimport WAVES from 'vanta/dist/vanta.waves.min';\nimport { Box } from '@material-ui/core';\n\n\n\nexport default class WavesAnimation extends React.Component {\n  constructor() {\n    super();\n    this.vantaRef = React.createRef();\n  }\n  componentDidMount() {\n    this.vantaEffect = WAVES({\n        THREE: THREE,\n        el: this.vantaRef.current,\n        mouseControls: true,\n        touchControls: true,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        scale: 1.00,\n        scaleMobile: 1.00\n      })\n  }\n  componentWillUnmount() {\n    if (this.vantaEffect) this.vantaEffect.destroy();\n  }\n  render() {\n    return (\n      <Box \n      ref={this.vantaRef} \n      style={{\n        position: 'absolute',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 0.1\n        }}>\n      </Box>\n    );\n  }\n}\n\n\n\n","import React from 'react'\nimport { Typography, Avatar, Grid, Box, IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Professional from '../../images/professional.jpeg'\nimport Typed from 'react-typed'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: '30vh',\n        height: '30vh',\n        margin: theme.spacing(1)\n    },\n    subtitle: {\n        color: '#660000'\n    },\n    centerBox: {\n        position: 'absolute',\n        top: '25%',\n        width: '100vw',\n        textAlign: 'center',\n        zIndex: 1\n    }\n}))\n\nconst Header = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.centerBox}>\n            <Grid container justify='center'>\n                <Avatar className={classes.avatar} src={Professional} alt='Gebri Mishtaku' />\n            </Grid>\n            <Typography variant='h2'>\n                <Typed strings={[\"Connect with me to chat!\"]} typeSpeed={25} />\n            </Typography>\n            <Grid container justify='center'>\n                <IconButton href='https://www.facebook.com/gebri.mishtaku/' target='_blank'>\n                    <FacebookIcon fontSize='large' style={{color: '#000000'}} />\n                </IconButton>\n                <IconButton href='https://www.instagram.com/gebrimishtaku/' target='_blank'>\n                    <InstagramIcon fontSize='large' style={{color: '#000000'}} />\n                </IconButton>\n                <IconButton href='https://www.linkedin.com/in/gebrimishtaku/' target='_blank'>\n                    <LinkedInIcon fontSize='large' style={{color: '#000000'}} />\n                </IconButton>\n                <IconButton href='https://github.com/mishtak00/' target='_blank'>\n                    <GitHubIcon fontSize='large' style={{color: '#000000'}} />\n                </IconButton>\n            </Grid>\n            {/* <Typography className={classes.subtitle} variant='h5'>\n                <Typed \n                // showCursor={false}\n                // startDelay={2650}\n                strings={[\n                    \"I'm a Software Engineer\",\n                    \"I'm a Full Stack Developer\",\n                    \"I'm a Quantum Programmer\"\n                ]} \n                typeSpeed={25}\n                backSpeed={20}\n                loop\n                // shuffle\n                />\n            </Typography> */}\n        </Box>\n    );\n}\n\nexport default Header;\n\n","import React from 'react'\nimport Navbar from '../shared/Navbar'\nimport WavesAnimation from '../shared/WavesAnimation'\nimport ContactHeader from './ContactHeader'\n\n\n\nconst Home = () => {\n    return (\n        <>\n            <Navbar pos='absolute' />\n            <WavesAnimation />\n            <ContactHeader />\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport Home from './components/home/index'\nimport AboutMe from './components/about/AboutMe'\nimport Projects from './components/projects/Projects'\nimport Contact from './components/contact/Contact'\n\n\n\nfunction App() {\n  return (\n    <>\n    <CssBaseline />\n    <Route exact path='/' component={Home} />\n    <Route path='/about-me' component={AboutMe} />\n    <Route path='/projects' component={Projects} />\n    <Route path='/contact' component={Contact} />\n    </>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n// import { BrowserRouter } from 'react-router-dom';\n\n/*\n  Note for self: If I ever decide to host this somewhere\n  different than GitHub Pages then change the routing to BrowserRouter.\n  GitHub Pages does not support HTML5 pushState history API from\n  BrowserRouter. Also, HashRouter is meant for legacy browsers.\n*/\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>\n,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/gm-icon.fb537416.png\";","module.exports = __webpack_public_path__ + \"static/media/bitmoji.1976fdaf.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/berlin.6b083793.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/profile.0c6272d3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/beach.500dcf9f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/this.b1eb7ef8.png\";","module.exports = __webpack_public_path__ + \"static/media/contactchain.b0dc2f12.png\";","module.exports = __webpack_public_path__ + \"static/media/centerfinder.eb9e0c55.png\";","module.exports = __webpack_public_path__ + \"static/media/correlator.6cfec198.png\";","module.exports = __webpack_public_path__ + \"static/media/malloc.93700ac3.png\";","module.exports = __webpack_public_path__ + \"static/media/qparser.c09d7ce6.png\";","module.exports = __webpack_public_path__ + \"static/media/wun.3c6b0469.png\";","module.exports = __webpack_public_path__ + \"static/media/genome1.408aee9f.png\";","module.exports = __webpack_public_path__ + \"static/media/metrics.b7e9a035.png\";","module.exports = __webpack_public_path__ + \"static/media/map1.55d86607.png\";","module.exports = __webpack_public_path__ + \"static/media/dimensions.dbcf348e.png\";","module.exports = __webpack_public_path__ + \"static/media/qsim0.fb4d3e60.png\";","module.exports = __webpack_public_path__ + \"static/media/professional.5b905d9a.jpeg\";"],"sourceRoot":""}